# -*- coding=UTF-8 -*-
# This typing file was generated by typing_from_help.py
"""
adb_shell.transport.base_transport - A base class for transports used to communicate with a device.

"""

import typing

"""
* :class:`BaseTransport`

    * :meth:`BaseTransport.bulk_read`
    * :meth:`BaseTransport.bulk_write`
    * :meth:`BaseTransport.close`
    * :meth:`BaseTransport.connect`

"""
import abc

class BaseTransport(abc.ABC):
    """
    A base transport class.
    """

    __abstractmethods__: ...
    """
    """
    def bulk_read(self, numbytes, transport_timeout_s):
        """
        Read data from the device.

        Parameters
        ----------
        numbytes : int
            The maximum amount of data to be received
        transport_timeout_s : float, None
            A timeout for the read operation

        Returns
        -------
        bytes
            The received data
        """
        ...
    def bulk_write(self, data, transport_timeout_s):
        """
        Send data to the device.

        Parameters
        ----------
        data : bytes
            The data to be sent
        transport_timeout_s : float, None
            A timeout for the write operation

        Returns
        -------
        int
            The number of bytes sent
        """
        ...
    def close(self):
        """
        Close the connection.
        """
        ...
    def connect(self, transport_timeout_s):
        """
        Create a connection to the device.

        Parameters
        ----------
        transport_timeout_s : float, None
            A connection timeout
        """
        ...
    ...

__all__: ...
"""
['ABC', 'BaseTransport', '__builtins__', '__cached__', '__do...
"""
